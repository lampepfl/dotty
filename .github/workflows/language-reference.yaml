name: Language reference documentation

on:
  push:
    branches:
      - 'language-reference-stable'
  pull_request:
    branches:
      - 'language-reference-stable'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build reference documentation and push it
    permissions:
      contents: write  # for Git to git push
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          path: 'dotty'
          fetch-depth: 0
          ssh-key: ${{ secrets.DOCS_KEY }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'sbt'

      - name: Generate reference documentation and test links
        run: |
          cd dotty
          ./project/scripts/sbt "scaladoc/generateReferenceDocumentation --no-regenerate-expected-links"
          ./project/scripts/docsLinksStability ./scaladoc/output/reference ./project/scripts/expected-links/reference-expected-links.txt
          cd ..

      - name: Push changes to scala3-reference-docs
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          repository: lampepfl/scala3-reference-docs
          fetch-depth: 0
          submodules: true
          ssh-key: ${{ secrets.DOCS_DEPLOY_KEY }}
          path: 'scala3-reference-docs'

      - if: github.event_name == 'push'
        run: |
          \cp -a dotty/scaladoc/output/reference/. scala3-reference-docs/
          cd scala3-reference-docs
          git config user.name gh-actions
          git config user.email actions@github.com
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "UPDATE ${{ steps.date.outputs.date }}"
            git push
          fi
          cd ..

  backport-to-main:
    name: Create pull request with backport to main
    permissions:
      contents: write       # it pushes a new branch
      pull-requests: write  # it creates a pr
    env:
      GITHUB_TOKEN: ${{ github.token }}
      BRANCH_NAME: reference-merge-${{ github.event.head_commit.id }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sync files with main
        run: |
          Retained=`cat .github/workflows/reference-sync/paths.txt`
          git restore --source=origin/main -- .
          echo "$Retained" | xargs git restore --

      - name: Commit
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "github-actions[bot]"
          git add -A .
          git commit -m "Sync the documentation branch"

      - name: Push
        run: |
          Url=${{ github.server_url }}
          Server=${Url#*://}
          Scheme=${Url%%://*}
          Remote=${Scheme}://${{ github.token }}@${Server}/${{ github.repository }}
          git push $Remote HEAD:refs/heads/$BRANCH_NAME

      - name: Prepare the message and create a pull request
        run: |
          <.github/workflows/reference-sync/pr-template.md sed -E "
            s^<<commit-id>>^${{ github.event.head_commit.id }}^g;
            s^<<author>>^${{ github.event.head_commit.author.username }}^g;
            s^<<repo-url>>^${Url}/${{ github.repository }}^g;
            s^<<branch-name>>^${BRANCH_NAME}^g;
          " \
            | hub pull-request -f -b main -h ${BRANCH_NAME} -a ${{ github.event.head_commit.author.username }} -l area:documentation -F -
