#!/usr/bin/env bash

# Try to autodetect real location of the script
if [ -z "${PROG_HOME-}" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

source "$PROG_HOME/bin/common"

case `uname` in
CYG*|MINGW*|MSYS*) PSEP=';' ;;
*) PSEP=':' ;;
esac

ARGS=()
while [ $# -gt 0 ]; do
  case "$1" in
  -cp | -classpath) # partial fix for #10761
    # passed as two arguments, e.g. '-classpath' 'lib/*'
    ARGS+=($1)
    ARGS+=("$2${PSEP}")
    shift
    shift
    ;;
  -cp*|-classpath*) # partial fix for #10761
    # passed as a single argument, e.g. '-classpath lib/*'
    # (hashbang line can glom args together)
    ARGS+=('-classpath')
    ARGS+=("\"${1#* *}${PSEP}\"")
    shift
    ;;
  *)
    ARGS+=($1)
    shift
    ;;
  esac
done

# exec here would prevent onExit from being called, leaving terminal in unusable state
compilerJavaClasspathArgs
[ -z "${ConEmuPID-}" -o -n "${cygwin-}" ] && export MSYSTEM= PWD= # workaround for #12405
eval "\"$JAVACMD\"" "-classpath \"$jvm_cp_args\"" "dotty.tools.MainGenericRunner" "-classpath \"$jvm_cp_args\"" "${ARGS[@]}"
scala_exit_status=$?


onExit
