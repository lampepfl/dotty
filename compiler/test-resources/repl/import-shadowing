scala> object A { def f = 1 }
// defined object A

scala> object B { def f = 2 }
// defined object B

scala> import A._

scala> val x0 = f
val x0: Int = 1

scala> import B._

scala> val x1 = f
val x1: Int = 2

scala> def f = 3
def f: Int

scala> val x2 = f
val x2: Int = 3

scala> def f = 4; import A._
def f: Int

scala> val x3 = f
val x3: Int = 1

scala> import A._; def f = 5
def f: Int

scala> val x4 = f
val x4: Int = 5

scala> def f = 6; println(f); import A._; println(f);  // import shadowing should only work on toplevel definitions in next runs
6
6
def f: Int

scala> import A._; println(f); def f = 7; println(f)
7
7
def f: Int

scala> def f = 8; import A.f
def f: Int

scala> val x5 = f
val x5: Int = 1

scala> import A.f; def f = 9
def f: Int

scala> val x6 = f
val x6: Int = 9
