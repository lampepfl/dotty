# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
1
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
276
279
9
<none>
Literal
false
0
false
"d"

2
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
281
284
9
<none>
Literal
false
0
false
"o"

3
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
286
289
9
<none>
Literal
false
0
false
"t"

4
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
291
294
9
<none>
Literal
false
0
false
"t"

5
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
296
299
9
<none>
Literal
false
0
false
"y"

6
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
271
300
9
apply
Apply
false
0
false
List("d", "o", "t", "t", "y")

7
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
$anonfun
615
617
17
<none>
Literal
false
0
false
: 

8
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
$anonfun
613
619
17
apply
Apply
false
0
false
$i: $s

9
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
$anonfun
611
620
17
s
Apply
false
0
false
s"$i: $s"

10
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
$anonfun
603
621
17
println
Apply
false
0
false
println(s"$i: $s")

11
tests/coverage/expect/ParameterUntupling.scala
example
ParameterUntupling$
Class
example.ParameterUntupling$
test
573
622
17
map
Apply
false
0
false
xs.zipWithIndex.map((s, i) => println(s"$i: $s"))

12
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
450
451
13
<none>
Literal
false
0
false
3

13
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
455
458
13
<none>
Literal
false
0
false
"3"

14
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
442
459
13
println
Apply
false
0
false
println(3 == "3")

15
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
473
474
15
<none>
Literal
false
0
false
3

16
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
478
481
15
<none>
Literal
false
0
false
5.1

17
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
501
502
17
<none>
Literal
false
0
false
1

18
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
504
505
17
<none>
Literal
false
0
false
2

19
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
496
506
17
apply
Apply
false
0
false
List(1, 2)

20
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
517
518
17
<none>
Literal
false
0
false
1

21
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
520
521
17
<none>
Literal
false
0
false
2

22
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
510
522
17
apply
Apply
false
0
false
Vector(1, 2)

23
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
496
522
17
==
Apply
false
0
false
List(1, 2) == Vector(1, 2)

24
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
488
523
17
println
Apply
false
0
false
println(List(1, 2) == Vector(1, 2))

25
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
578
579
22
<init>
Select
false
0
false
A

26
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
580
581
22
<none>
Literal
false
0
false
4

27
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
595
596
23
<init>
Select
false
0
false
B

28
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
597
598
23
<none>
Literal
false
0
false
4

29
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
694
709
28
println
Apply
false
0
false
println(a != b)

30
tests/coverage/expect/MultiversalEquality.scala
example
MultiversalEquality$
Class
example.MultiversalEquality$
test
714
729
29
println
Apply
false
0
false
println(b == a)

31
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
547
558
24
-
Apply
false
0
false
p2.y - p1.y

32
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
560
561
24
<none>
Literal
false
0
false
2

33
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
538
562
24
pow
Apply
false
0
false
Math.pow(p2.y - p1.y, 2)

34
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
574
585
24
-
Apply
false
0
false
p2.x - p1.x

35
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
587
588
24
<none>
Literal
false
0
false
2

36
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
565
589
24
pow
Apply
false
0
false
Math.pow(p2.x - p1.x, 2)

37
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
538
589
24
+
Apply
false
0
false
Math.pow(p2.y - p1.y, 2) + Math.pow(p2.x - p1.x, 2)

38
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
euclideanDistance
528
590
24
sqrt
Apply
false
0
false
Math.sqrt(Math.pow(p2.y - p1.y, 2) + Math.pow(p2.x - p1.x, 2))

39
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
test
614
615
26
<none>
Literal
false
0
false
3

40
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
test
617
618
26
<none>
Literal
false
0
false
4

41
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
test
643
644
27
<none>
Literal
false
0
false
6

42
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
test
646
647
27
<none>
Literal
false
0
false
8

43
tests/coverage/expect/ContextFunctions.scala
example
IntersectionTypes$
Class
example.IntersectionTypes$
test
653
687
28
println
Apply
false
0
false
println(euclideanDistance(p1, p2))

44
tests/coverage/expect/TypeLambdas.scala
example
TypeLambdas$
Class
example.TypeLambdas$
test
310
311
13
<none>
Literal
false
0
false
1

45
tests/coverage/expect/TypeLambdas.scala
example
TypeLambdas$
Class
example.TypeLambdas$
test
315
318
13
<none>
Literal
false
0
false
"1"

46
tests/coverage/expect/TypeLambdas.scala
example
TypeLambdas$
Class
example.TypeLambdas$
test
306
319
13
apply
Apply
false
0
false
Map(1 -> "1")

47
tests/coverage/expect/TypeLambdas.scala
example
TypeLambdas$
Class
example.TypeLambdas$
test
368
371
16
<none>
Literal
false
0
false
"a"

48
tests/coverage/expect/TypeLambdas.scala
example
TypeLambdas$
Class
example.TypeLambdas$
test
373
376
16
<none>
Literal
false
0
false
"b"

49
tests/coverage/expect/StructuralTypes.scala
example
Record
Class
example.Record
selectDynamic
319
343
9
find
Apply
false
0
false
elems.find(_._1 == name)

50
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
442
448
16
<none>
Literal
false
0
false
"name"

51
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
452
458
16
<none>
Literal
false
0
false
"Emma"

52
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
460
465
16
<none>
Literal
false
0
false
"age"

53
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
469
471
16
<none>
Literal
false
0
false
42

54
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
473
481
16
<none>
Literal
false
0
false
"salary"

55
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
485
489
16
<none>
Literal
false
0
false
320L

56
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
435
490
16
apply
Apply
false
0
false
Record("name" -> "Emma", "age" -> 42, "salary" -> 320L)

57
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
542
548
18
<none>
Literal
false
0
false
"name"

58
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
552
558
18
<none>
Literal
false
0
false
"John"

59
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
560
568
18
<none>
Literal
false
0
false
"salary"

60
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
572
574
18
<none>
Literal
false
0
false
42

61
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
<init>
535
575
18
apply
Apply
false
0
false
Record("name" -> "John", "salary" -> 42)

62
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
test
623
643
21
println
Apply
false
0
false
println(person.name)

63
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
test
648
667
22
println
Apply
false
0
false
println(person.age)

64
tests/coverage/expect/StructuralTypes.scala
example
StructuralTypes$
Class
example.StructuralTypes$
test
673
700
24
println
Apply
false
0
false
println(invalidPerson.name)

65
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
safeDivide
663
664
21
<none>
Literal
false
0
false
0

66
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
safeDivide
685
710
21
<none>
Literal
false
0
false
"DivisionByZeroException"

67
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
safeDivide
670
711
21
apply
Apply
true
0
false
DivisionByZero("DivisionByZeroException")

68
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
safeDivide
717
731
21
apply
Apply
false
0
false
Success(a / b)

69
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
safeDivide
717
731
21
<none>
Block
true
0
false
Success(a / b)

70
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
949
950
28
<none>
Literal
false
0
false
4

71
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
952
953
28
<none>
Literal
false
0
false
2

72
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1044
1045
31
<none>
Literal
false
0
false
4

73
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1047
1048
31
<none>
Literal
false
0
false
0

74
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1112
1150
34
println
Apply
false
0
false
println(either(divisionResultSuccess))

75
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1213
1251
37
println
Apply
false
0
false
println(either(divisionResultFailure))

76
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1297
1298
39
<none>
Literal
false
0
false
1

77
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1305
1306
39
<none>
Literal
false
0
false
2

78
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1313
1314
39
<none>
Literal
false
0
false
3

79
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1300
1323
39
apply
Apply
false
0
false
Cons(2, Cons(3, Empty))

80
tests/coverage/expect/UnionTypes.scala
example
UnionTypes$
Class
example.UnionTypes$
test
1292
1324
39
apply
Apply
false
0
false
Cons(1, Cons(2, Cons(3, Empty)))

81
tests/coverage/expect/PatternMatching.scala
example
Even$
Class
example.Even$
unapply
296
306
12
%
Select
false
0
false
s.length %

82
tests/coverage/expect/PatternMatching.scala
example
Even$
Class
example.Even$
unapply
307
308
12
<none>
Literal
false
0
false
2

83
tests/coverage/expect/PatternMatching.scala
example
Even$
Class
example.Even$
unapply
312
313
12
<none>
Literal
false
0
false
0

84
tests/coverage/expect/PatternMatching.scala
example
Person$
Class
example.Person$
unapply
797
803
29
<init>
Select
false
0
false
Person

85
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1047
1062
37
split
Select
false
0
false
name.trim.split

86
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1063
1066
37
<none>
Literal
false
0
false
" "

87
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1092
1093
38
<none>
Literal
false
0
false
2

88
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1099
1103
38
None
Ident
true
0
false
None

89
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1161
1162
39
<none>
Literal
false
0
false
1

90
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1150
1163
39
refArrayOps
Apply
false
0
false
names.drop(1)

91
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1174
1175
39
<none>
Literal
false
0
false
1

92
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1150
1176
39
wrapRefArray
Apply
false
0
false
names.drop(1).dropRight(1)

93
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1117
1184
39
apply
Apply
false
0
false
Some(names.last :: names.head :: names.drop(1).dropRight(1).toList)

94
tests/coverage/expect/PatternMatching.scala
example
Names$
Class
example.Names$
unapplySeq
1117
1184
39
<none>
Block
true
0
false
Some(names.last :: names.head :: names.drop(1).dropRight(1).toList)

95
tests/coverage/expect/PatternMatching.scala
example
Name$
Class
example.Name$
unapply
1361
1365
49
<init>
Select
false
0
false
Name

96
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1425
1431
55
<none>
Literal
false
0
false
"even"

97
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1475
1508
56
<none>
Literal
false
0
false
 has an even number of characters

98
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1473
1508
56
apply
Apply
false
0
false
$s has an even number of characters

99
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1471
1509
56
s
Apply
false
0
false
s"$s has an even number of characters"

100
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1463
1510
56
println
Apply
false
0
false
println(s"$s has an even number of characters")

101
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1548
1580
57
<none>
Literal
false
0
false
 has an odd number of characters

102
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1546
1580
57
apply
Apply
false
0
false
$s has an odd number of characters

103
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1544
1581
57
s
Apply
false
0
false
s"$s has an odd number of characters"

104
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1536
1582
57
println
Apply
false
0
false
println(s"$s has an odd number of characters")

105
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
containsConsecutive
1775
1810
61
containsConsecutive
Apply
false
0
false
containsConsecutive(b :: xs.toList)

106
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
containsConsecutive
1843
1848
62
<none>
Literal
false
0
false
false

107
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1887
1888
64
<none>
Literal
false
0
false
1

108
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1890
1891
64
<none>
Literal
false
0
false
2

109
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1893
1894
64
<none>
Literal
false
0
false
3

110
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1896
1897
64
<none>
Literal
false
0
false
4

111
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1899
1900
64
<none>
Literal
false
0
false
5

112
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1882
1901
64
apply
Apply
false
0
false
List(1, 2, 3, 4, 5)

113
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1862
1902
64
containsConsecutive
Apply
false
0
false
containsConsecutive(List(1, 2, 3, 4, 5))

114
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1854
1903
64
println
Apply
false
0
false
println(containsConsecutive(List(1, 2, 3, 4, 5)))

115
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1941
1942
65
<none>
Literal
false
0
false
1

116
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1944
1945
65
<none>
Literal
false
0
false
2

117
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1947
1948
65
<none>
Literal
false
0
false
3

118
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1950
1951
65
<none>
Literal
false
0
false
3

119
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1953
1954
65
<none>
Literal
false
0
false
5

120
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1936
1955
65
apply
Apply
false
0
false
List(1, 2, 3, 3, 5)

121
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1916
1956
65
containsConsecutive
Apply
false
0
false
containsConsecutive(List(1, 2, 3, 3, 5))

122
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1908
1957
65
println
Apply
false
0
false
println(containsConsecutive(List(1, 2, 3, 3, 5)))

123
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
1992
1998
68
<none>
Literal
false
0
false
"john"

124
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2000
2002
68
<none>
Literal
false
0
false
42

125
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2048
2054
69
<none>
Literal
false
0
false
name: 

126
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2056
2063
69
<none>
Literal
false
0
false
, age: 

127
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2048
2065
69
apply
Apply
false
0
false
name: $n, age: $a

128
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2046
2066
69
s
Apply
false
0
false
s"name: $n, age: $a"

129
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2038
2067
69
println
Apply
false
0
false
println(s"name: $n, age: $a")

130
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
greet
2189
2205
74
<none>
Literal
false
0
false
"Good morning, "

131
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
greet
2220
2223
74
<none>
Literal
false
0
false
" "

132
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
greet
2237
2240
74
<none>
Literal
false
0
false
"!"

133
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
greet
2286
2335
75
<none>
Literal
false
0
false
"Welcome! Please make sure to fill in your name!"

134
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2359
2372
77
<none>
Literal
false
0
false
"Alan Turing"

135
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2345
2374
77
println
Apply
false
0
false
println(greet("Alan Turing"))

136
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2393
2399
78
<none>
Literal
false
0
false
"john"

137
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2379
2401
78
println
Apply
false
0
false
println(greet("john"))

138
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2420
2445
79
<none>
Literal
false
0
false
"Wolfgang Amadeus Mozart"

139
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2406
2447
79
println
Apply
false
0
false
println(greet("Wolfgang Amadeus Mozart"))

140
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2478
2485
82
<none>
Literal
false
0
false
"alice"

141
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2525
2533
83
<none>
Literal
false
0
false
name is 

142
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2525
2535
83
apply
Apply
false
0
false
name is $n

143
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2523
2536
83
s
Apply
false
0
false
s"name is $n"

144
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2515
2537
83
println
Apply
false
0
false
println(s"name is $n")

145
tests/coverage/expect/PatternMatching.scala
example
PatternMatching$
Class
example.PatternMatching$
test
2568
2580
84
<none>
Literal
false
0
false
"empty name"

146
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
printMessages
475
490
13
map
Apply
false
0
false
msgs.map(_.msg)

147
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
printMessages
500
503
13
<none>
Literal
false
0
false
" "

148
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
printMessages
467
505
13
println
Apply
false
0
false
println(msgs.map(_.msg).mkString(" "))

149
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
test
550
551
16
<init>
Select
false
0
false
A

150
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
test
557
558
16
<init>
Select
false
0
false
B

151
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
test
532
559
16
printMessages
Apply
false
0
false
printMessages(new A, new B)

152
tests/coverage/expect/TraitParams.scala
example
TraitParams$
Class
example.TraitParams$
test
685
686
20
<none>
Literal
false
0
false
1

153
tests/coverage/expect/Enum.scala
example
Planet
Class
example.Planet
<init>
326
337
14
<none>
Literal
false
0
false
6.67300E-11

154
tests/coverage/expect/Enum.scala
example
Planet
Class
example.Planet
surfaceGravity
363
390
15
/
Apply
false
0
false
G * mass / (radius * radius

155
tests/coverage/expect/Enum.scala
example
Planet
Class
example.Planet
surfaceWeight
436
462
16
*
Apply
false
0
false
otherMass * surfaceGravity

156
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
988
989
30
<none>
Literal
false
0
false
1

157
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1005
1006
30
<none>
Literal
false
0
false
2

158
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1022
1023
30
<none>
Literal
false
0
false
3

159
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1008
1040
30
apply
Apply
false
0
false
ListEnum.Cons(3, ListEnum.Empty)

160
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
991
1041
30
apply
Apply
false
0
false
ListEnum.Cons(2, ListEnum.Cons(3, ListEnum.Empty))

161
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
974
1042
30
apply
Apply
false
0
false
ListEnum.Cons(1, ListEnum.Cons(2, ListEnum.Cons(3, ListEnum.Empty)))

162
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1055
1070
31
<none>
Literal
false
0
false
"Example 1: \n"

163
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1047
1081
31
println
Apply
false
0
false
println("Example 1: \n"+emptyList)

164
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1103
1105
32
<none>
Literal
false
0
false
\n

165
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1096
1105
32
apply
Apply
false
0
false
${list}\n

166
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1094
1106
32
s
Apply
false
0
false
s"${list}\n"

167
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1086
1107
32
println
Apply
false
0
false
println(s"${list}\n")

168
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
calculateEarthWeightOnPlanets
1187
1226
35
/
Apply
false
0
false
earthWeight/Planet.Earth.surfaceGravity

169
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
calculateEarthWeightOnPlanets
1242
1255
36
refArrayOps
Apply
false
0
false
Planet.values

170
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
$anonfun
1277
1292
37
<none>
Literal
false
0
false
Your weight on 

171
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
$anonfun
1294
1298
37
<none>
Literal
false
0
false
 is 

172
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
$anonfun
1277
1322
37
apply
Apply
false
0
false
Your weight on $p is ${p.surfaceWeight(mass)}

173
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
$anonfun
1275
1323
37
s
Apply
false
0
false
s"Your weight on $p is ${p.surfaceWeight(mass)}"

174
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
$anonfun
1267
1324
37
println
Apply
false
0
false
println(s"Your weight on $p is ${p.surfaceWeight(mass)}")

175
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
calculateEarthWeightOnPlanets
1233
1324
36
foreach
Apply
false
0
false
for p <- Planet.values do
        println(s"Your weight on $p is ${p.surfaceWeight(mass)}")

176
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1338
1350
39
<none>
Literal
false
0
false
"Example 2:"

177
tests/coverage/expect/Enum.scala
example
EnumTypes$
Class
example.EnumTypes$
test
1386
1388
40
<none>
Literal
false
0
false
80

