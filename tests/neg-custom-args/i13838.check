-- [E007] Type Mismatch Error: tests/neg-custom-args/i13838.scala:8:48 -------------------------------------------------
8 |  def liftF[F[_], A](fa: F[A]): F[Foo[A]] = map(fa)(???)  // error
  |                                                ^^
  |                                              Found:    (fa : F[A])
  |                                              Required: F²[Foo[A²]]
  |
  |                                              where:    A  is a type in method liftF
  |                                                        A² is a type variable
  |                                                        F  is a type in method liftF with bounds <: [_] =>> Any
  |                                                        F² is a type variable with constraint <: [_] =>> Any
  |
  |
  |                                              The following import might make progress towards fixing the problem:
  |
  |                                                import collection.Searching.search
  |

longer explanation available when compiling with `-explain`
-- [E168] Type Warning: tests/neg-custom-args/i13838.scala:8:50 --------------------------------------------------------
8 |  def liftF[F[_], A](fa: F[A]): F[Foo[A]] = map(fa)(???)  // error
  |                                                  ^
  |                                     Implicit search problem too large.
  |                                     an implicit search was terminated with failure after trying 1000 expressions.
  |                                     The root candidate for the search was:
  |
  |                                       method catsSyntaxEq  for  ([_] =>> Any)[Foo[Any]]}
  |
  |                                     You can change the behavior by setting the `-Ximplicit-search-limit` value.
  |                                     Smaller values cause the search to fail faster.
  |                                     Larger values might make a very large search problem succeed.

longer explanation available when compiling with `-explain`
