J:
List(Apply(Select(New(Ident(SuppressWarnings)),<init>),List(NamedArg(value,JavaSeqLiteral(List(Literal(Constant(a))), TypeTree[TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String)])))))
List(Apply(Select(New(Ident(SuppressWarnings)),<init>),List(NamedArg(value,JavaSeqLiteral(List(Literal(Constant(b))), TypeTree[TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String)])))))
List(Apply(Select(New(Ident(SuppressWarnings)),<init>),List(NamedArg(value,Apply(Apply(TypeApply(Select(Select(Select(Ident(_root_),scala),Array),apply),List(TypeTree[TypeVar(TypeParamRef(T) -> TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String))])),List(Typed(SeqLiteral(List(Literal(Constant(c)), Literal(Constant(d))),TypeTree[TypeVar(TypeParamRef(T) -> TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String))]),TypeTree[AppliedType(TypeRef(ThisType(TypeRef(NoPrefix,module class scala)),class <repeated>),List(TypeVar(TypeParamRef(T) -> TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String))))]))),List(Apply(TypeApply(Select(Ident(ClassTag),apply),List(TypeTree[TypeVar(TypeParamRef(T) -> TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String))])),List(Literal(Constant(TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String)))))))))))
